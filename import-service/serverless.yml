service: import-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
          Resource: 
            - "arn:aws:s3:::import-products-aws-course-bucket"
            - "arn:aws:s3:::import-products-aws-course-bucket/*"
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::import-products-aws-course-bucket"
            - "arn:aws:s3:::import-products-aws-course-bucket/*"


plugins:
  - serverless-webpack
  - serverless-offline

functions:
  importProductsFile:
    handler: handler.getImageUploadURL
    events:
      - http:
          method: get
          path: /import
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.parseCSVFile
    events:
      - s3:
          bucket: import-products-aws-course-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          # Set to 'true' when using an existing bucket
          # Else the bucket will be automatically created
          existing: true
custom:
  webpack:
    webpackConfig: 'webpack.config.js' # Name of webpack configuration file
    includeModules: true # Node modules configuration for packaging
    packager: 'npm' # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js # Provide a glob for files to ignore
